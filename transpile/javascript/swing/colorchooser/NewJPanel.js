/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 * @author gianpiero.diblasi
 */
class NewJPanel extends JPanel {

  /**
   * Creates new form NewJPanel
   */
  constructor() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
   initComponents() {
    let gridBagConstraints = null;
    buttonGroup1 = new ButtonGroup();
    hue = new JRadioButton();
    saturation = new JRadioButton();
    value = new JRadioButton();
    hueSlider = new JSlider();
    satutationSlider = new JSlider();
    valueSlider = new JSlider();
    hueSpinner = new JSpinner();
    saturationSpinner = new JSpinner();
    valueSpinner = new JSpinner();
    jPanel1 = new JPanel();
    jPanel2 = new JPanel();
    setLayout(new GridBagLayout());
    buttonGroup1.add(hue);
    hue.setSelected(true);
    hue.setText("hue");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = GridBagConstraints.LINE_START;
    add(hue, gridBagConstraints);
    buttonGroup1.add(saturation);
    saturation.setText("saturation");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = GridBagConstraints.LINE_START;
    add(saturation, gridBagConstraints);
    buttonGroup1.add(value);
    value.setText("value");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = GridBagConstraints.LINE_START;
    add(value, gridBagConstraints);
    hueSlider.setMaximum(360);
    hueSlider.setValue(0);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    add(hueSlider, gridBagConstraints);
    satutationSlider.setValue(0);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    add(satutationSlider, gridBagConstraints);
    valueSlider.setValue(0);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 2;
    add(valueSlider, gridBagConstraints);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    add(hueSpinner, gridBagConstraints);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    add(saturationSpinner, gridBagConstraints);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 2;
    add(valueSpinner, gridBagConstraints);
    jPanel1.setBackground(new Color(255, 255, 0));
    let jPanel1Layout = new GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 4;
    gridBagConstraints.fill = GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    add(jPanel1, gridBagConstraints);
    jPanel2.setBackground(new Color(204, 0, 0));
    let jPanel2Layout = new GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 4;
    gridBagConstraints.fill = GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 5.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new Insets(0, 0, 0, 5);
    add(jPanel2, gridBagConstraints);
  }

  // </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
   buttonGroup1 = null;

   hue = null;

   hueSlider = null;

   hueSpinner = null;

   jPanel1 = null;

   jPanel2 = null;

   saturation = null;

   saturationSpinner = null;

   satutationSlider = null;

   value = null;

   valueSlider = null;

   valueSpinner = null;
  // End of variables declaration//GEN-END:variables
}
