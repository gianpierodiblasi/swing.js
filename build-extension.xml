<?xml version="1.0" encoding="UTF-8"?> 
<project name="swing.js" basedir="." default="build"> 
 
  <property name="src.dir" value="${basedir}/src" /> 
  <property name="transpile.dir" value="${basedir}/transpile" /> 
  <property name="build.dir" value="${basedir}/build" /> 
  <property name="test.dir" value="${basedir}/test" /> 
  <property name="transpile-test.dir" value="${basedir}/transpile-test" /> 
  <property name="josetta.jar" value="${basedir}/lib/josetta-1.10.2-jar-with-dependencies.jar" /> 
  
  <target name="clean"> 
    <delete>
      <fileset dir="${build.dir}"/>
    </delete> 
  </target> 
  
  <target name="version">
    <loadfile property="version" srcFile="${basedir}/version.properties"/>
  </target>
  
  <target name="transpile">
    <java classname="giada.josetta.Josetta">
      <arg value="-in"/>
      <arg value="${src.dir}"/>
      <arg value="-out"/>
      <arg value="${transpile.dir}"/>
      <classpath>
        <pathelement path="${josetta.jar}"/>
      </classpath>
    </java>
  </target>
  
  <target name="transpile-test">
    <java classname="giada.josetta.Josetta">
      <arg value="-in"/>
      <arg value="${test.dir}"/>
      <arg value="-out"/>
      <arg value="${transpile-test.dir}"/>
      <classpath>
        <pathelement path="${josetta.jar}"/>
      </classpath>
    </java>
  </target>
  
<!--  <target name="html_source_list_comma">
    <loadfile property="html_source_list_comma" srcFile="${src.dir}/giada/html_list.properties">
      <filterchain>
        <linecontainsregexp negate="true">
          <regexp pattern="#.*"/>
        </linecontainsregexp>
        <linecontainsregexp>
          <regexp pattern="[^ \n\t\r]+"/>
        </linecontainsregexp>
        <suffixlines suffix=","/>
        <striplinebreaks/>
      </filterchain>     
    </loadfile>
  </target>-->
  
<!--  <target name="js_source_list_comma">
    <loadfile property="js_source_list_comma" srcFile="${transpile.dir}/giada/js_list.properties">
      <filterchain>
        <linecontainsregexp negate="true">
          <regexp pattern="#.*"/>
        </linecontainsregexp>
        <linecontainsregexp>
          <regexp pattern="[^ \n\t\r]+"/>
        </linecontainsregexp>
        <suffixlines suffix=","/>
        <striplinebreaks/>
      </filterchain>
    </loadfile>
  </target>-->
  
<!--  <target name="js_source_list_space">
    <loadfile property="js_source_list_space" srcFile="${transpile.dir}/giada/js_list.properties">
      <filterchain>
        <linecontainsregexp negate="true">
          <regexp pattern="#.*"/>
        </linecontainsregexp>
        <linecontainsregexp>
          <regexp pattern="[^ \n\t\r]+"/>
        </linecontainsregexp>
        <suffixlines suffix=" "/>
        <striplinebreaks/>
      </filterchain>
    </loadfile>
  </target>-->
  
<!--  <target name="css_source_list_comma">
    <loadfile property="css_source_list_comma" srcFile="${src.dir}/css/css_list.properties">
      <filterchain>
        <linecontainsregexp negate="true">
          <regexp pattern="#.*"/>
        </linecontainsregexp>
        <linecontainsregexp>
          <regexp pattern="[^ \n\t\r]+"/>
        </linecontainsregexp>
        <suffixlines suffix=","/>
        <striplinebreaks/>
      </filterchain>
    </loadfile>
  </target>-->
  
<!--  <target name="css_source_list_space">
    <loadfile property="css_source_list_space" srcFile="${src.dir}/css/css_list.properties">
      <filterchain>
        <linecontainsregexp negate="true">
          <regexp pattern="#.*"/>
        </linecontainsregexp>
        <linecontainsregexp>
          <regexp pattern="[^ \n\t\r]+"/>
        </linecontainsregexp>
        <suffixlines suffix=" "/>
        <striplinebreaks/>
      </filterchain>
    </loadfile>
  </target>-->
  
<!--  <target name="build_html" depends="version, html_source_list_comma">
    <for list="${html_source_list_comma}" param="file">
      <sequential>
        <concat destfile="${build.dir}/bundle-${version}.html" append="true">@{file} := </concat>
        <concat destfile="${build.dir}/bundle-${version}.html" append="true">
          <fileset file="${src.dir}/@{file}"/>
          <filterchain>
            <striplinebreaks/>
          </filterchain>
        </concat>
        <concat destfile="${build.dir}/bundle-${version}.html" append="true">${line.separator}</concat>
      </sequential>
    </for>
    <replace file="${build.dir}/bundle-${version}.html" token="&gt;&lt;" value="&gt; &lt;"/>
  </target>-->
  
<!--  <target name="build_js" depends="version, js_source_list_comma">
    <concat destfile="${build.dir}/bundle-${version}.js" fixlastline="yes">
      <filterchain>
        <linecontainsregexp negate="true">
          <regexp pattern="/* global .* */"/>
        </linecontainsregexp>
      </filterchain>
      
      <filelist dir="${basedir}" files="${js_source_list_comma}"/>
    </concat>
  </target>-->
  
<!--  <target name="build_css" depends="version,css_source_list_comma">
    <concat destfile="${build.dir}/bundle-${version}.css" fixlastline="yes">
      <filelist dir="${basedir}" files="${css_source_list_comma}"/>
    </concat>
  </target>-->
  
<!--  <target name="copy_images">
    <copy todir="${build.dir}/image">
      <fileset dir="${src.dir}/image">
        <include name="**/*.png"/>
        <include name="**/*.svg"/>
      </fileset>
    </copy>
    <copy file="${src.dir}/image/image_list.properties" tofile="${build.dir}/image/image_list-${version}.properties"/>
  </target>-->
  
<!--  <target name="copy_messages">
    <copy todir="${build.dir}/message" encoding="UTF-8" outputencoding="UTF-8">
      <fileset dir="${src.dir}/message"/>
      <globmapper from="*.txt" to="*-${version}.txt"/>
    </copy>
  </target>
  -->
<!--  <target name="copy_loader">
    <copy file="${transpile.dir}/giada/pizzapazza/Z4Loader.js" todir="${build.dir}/"/>
  </target>-->
  
<!--  <target name="build" depends="transpile,transpile-test,build_html,build_js,build_css,build_js_min,build_css_min,copy_images,copy_messages,copy_loader,copy_version">
  </target>-->
  
  <target name="watch">
    <java classname="giada.josetta.Josetta">
      <arg value="-in"/>
      <arg value="${src.dir}"/>
      <arg value="-out"/>
      <arg value="${transpile.dir}"/>
      <arg value="-w"/>
      <classpath>
        <pathelement path="${josetta.jar}"/>
      </classpath>
    </java>
  </target>
  
  <target name="watch-test">
    <java classname="giada.josetta.Josetta">
      <arg value="-in"/>
      <arg value="${test.dir}"/>
      <arg value="-out"/>
      <arg value="${transpile-test.dir}"/>
      <arg value="-w"/>
      <classpath>
        <pathelement path="${josetta.jar}"/>
      </classpath>
    </java>
  </target>
</project>