/**
 * @author gianpiero.diblasi
 */
class TestJFrame8 extends JFrame {

  /**
   * Creates new form TestFrame3
   */
  constructor() {
    super();
    this.initComponents();
    this.postInitComponents();
  }

   postInitComponents() {
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
   initComponents() {
    this.jPanel1 = new JPanel();let jPanel1 = this.jPanel1;
    this.jButton1 = new JButton();let jButton1 = this.jButton1;
    this.jButton2 = new JButton();let jButton2 = this.jButton2;
    this.jButton3 = new JButton();let jButton3 = this.jButton3;
    this.jButton4 = new JButton();let jButton4 = this.jButton4;
    this.jButton5 = new JButton();let jButton5 = this.jButton5;
    this.jPanel2 = new JPanel();let jPanel2 = this.jPanel2;
    this.setTitle("Test File Chooser");
    jPanel1.setLayout(new GridLayout(2, 3, 5, 5));
    jButton1.setText("Open Single File");
    jButton1.addActionListener((p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) => this.jButton1ActionPerformed(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10));
    jPanel1.add(jButton1);
    jButton2.setText("Open Multiple Files");
    jButton2.addActionListener((p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) => this.jButton2ActionPerformed(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10));
    jPanel1.add(jButton2);
    jButton3.setText("Open Files in Folder");
    jButton3.addActionListener((p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) => this.jButton3ActionPerformed(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10));
    jPanel1.add(jButton3);
    jButton4.setText("Open Single File FSA API");
    jButton4.addActionListener((p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) => this.jButton4ActionPerformed(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10));
    jPanel1.add(jButton4);
    jButton5.setText("Open Multiple File FSA API");
    jButton5.addActionListener((p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) => this.jButton5ActionPerformed(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10));
    jPanel1.add(jButton5);
    this.getContentPane().add(jPanel1, BorderLayout.PAGE_START);
    this.getContentPane().add(jPanel2, BorderLayout.CENTER);
  }

  // </editor-fold>//GEN-END:initComponents
   jButton1ActionPerformed(evt) {
    // GEN-FIRST:event_jButton1ActionPerformed
    this.open(JSFileChooser.SINGLE_SELECTION);
  }

  // GEN-LAST:event_jButton1ActionPerformed
   jButton2ActionPerformed(evt) {
    // GEN-FIRST:event_jButton2ActionPerformed
    this.open(JSFileChooser.MULTIPLE_SELECTION);
  }

  // GEN-LAST:event_jButton2ActionPerformed
   jButton3ActionPerformed(evt) {
    // GEN-FIRST:event_jButton3ActionPerformed
    this.open(JSFileChooser.FOLDER_SELECTION);
  }

  // GEN-LAST:event_jButton3ActionPerformed
   jButton4ActionPerformed(evt) {
    // GEN-FIRST:event_jButton4ActionPerformed
    this.open2(false);
  }

  // GEN-LAST:event_jButton4ActionPerformed
   jButton5ActionPerformed(evt) {
    // GEN-FIRST:event_jButton5ActionPerformed
    this.open2(true);
  }

  // GEN-LAST:event_jButton5ActionPerformed
   open(selectionType) {
    JSFileChooser.showOpenDialog(".gif,.png,.jpeg,.jpg", selectionType, 0, files => {
      document.querySelectorAll("img").forEach(img => img.parentElement.removeChild(img));
      files.forEach(file => {
        let fileReader = new FileReader();
        fileReader.onload = event => {
          let img = document.createElement("img");
          img.src = fileReader.result;
          document.querySelector(".center").appendChild(img);
          return null;
        };
        fileReader.readAsDataURL(file);
      });
    });
  }

   open2(multiple) {
    let options = new FilePickerOptions();
    options.excludeAcceptAllOption = true;
    options.multiple = multiple;
    options.id = "CURRENT_ID";
    let type = new FilePickerOptionsType();
    type.description = "Immagini";
    type.pushAccept("image/z4i", new Array(".gif", ".png"));
    options.types.push(type);
    type = new FilePickerOptionsType();
    type.description = "Solo GIF";
    type.pushAccept("image/gif", new Array(".gif"));
    options.types.push(type);
    type = new FilePickerOptionsType();
    type.description = "Solo PNG";
    type.pushAccept("image/png", new Array(".png"));
    options.types.push(type);
    type = new FilePickerOptionsType();
    type.description = "pizzApazzA";
    type.pushAccept("application/z4i", new Array(".z4i"));
    options.types.push(type);
    console.log(options);
    JSFilePicker.showOpenFilePicker(options, 0, handles => {
      document.querySelectorAll("img").forEach(img => img.parentElement.removeChild(img));
      handles.forEach(h => h.getFile().then(file => {
        let fileReader = new FileReader();
        fileReader.onload = event => {
          let img = document.createElement("img");
          img.src = fileReader.result;
          document.querySelector(".center").appendChild(img);
          return null;
        };
        fileReader.readAsDataURL(file);
      }));
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
   jButton1 = null;

   jButton2 = null;

   jButton3 = null;

   jButton4 = null;

   jButton5 = null;

   jPanel1 = null;

   jPanel2 = null;
  // End of variables declaration//GEN-END:variables
}
