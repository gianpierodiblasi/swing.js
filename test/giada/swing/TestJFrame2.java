package giada.swing;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JSlider;
import javax.swing.JToggleButton;
import javax.swing.event.ChangeEvent;

/**
 *
 * @author gianpiero.diblasi
 */
public class TestJFrame2 extends javax.swing.JFrame {

  private static final long serialVersionUID = 1;

  public TestJFrame2() {
    super();
    this.initComponents();
    this.postInitComponents();
  }

  private void postInitComponents() {
    AbstractComboBoxModelAndRenderer<Integer> modelAndRenderer = new DefaultComboBoxModelAndRenderer<>();
    modelAndRenderer.addElement(10);
    modelAndRenderer.addElement(20);
    modelAndRenderer.addElement(30);

    this.jComboBox2.putClientProperty("model-and-renderer", modelAndRenderer);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    GridBagConstraints gridBagConstraints;

    buttonGroup1 = new ButtonGroup();
    jLabel1 = new JLabel();
    jLabel2 = new JLabel();
    jComboBox1 = new JComboBox<>();
    jComboBox2 = new JComboBox<>();
    jCheckBox1 = new JCheckBox();
    jCheckBox2 = new JCheckBox();
    jButton1 = new JButton();
    jRadioButton1 = new JRadioButton();
    jRadioButton2 = new JRadioButton();
    jToggleButton1 = new JToggleButton();
    jSlider1 = new JSlider();
    jSlider2 = new JSlider();
    jSlider3 = new JSlider();
    jSlider4 = new JSlider();

    setTitle("Test JFrame2");
    GridBagLayout layout = new GridBagLayout();
    layout.columnWidths = new int[] {0, 15, 0, 15, 0, 15, 0, 15, 0, 15, 0, 15, 0};
    layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
    getContentPane().setLayout(layout);

    jLabel1.setText("Face:");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = GridBagConstraints.EAST;
    getContentPane().add(jLabel1, gridBagConstraints);

    jLabel2.setText("Size:");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = GridBagConstraints.EAST;
    getContentPane().add(jLabel2, gridBagConstraints);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 100.0;
    gridBagConstraints.insets = new Insets(5, 5, 5, 5);
    getContentPane().add(jComboBox1, gridBagConstraints);

    jComboBox2.addActionListener(this::jComboBox2ActionPerformed);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 10;
    gridBagConstraints.ipady = 10;
    gridBagConstraints.weightx = 100.0;
    getContentPane().add(jComboBox2, gridBagConstraints);

    jCheckBox1.setSelected(true);
    jCheckBox1.setText("Bold");
    jCheckBox1.addActionListener(this::jCheckBox1ActionPerformed);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.weightx = 100.0;
    gridBagConstraints.weighty = 100.0;
    getContentPane().add(jCheckBox1, gridBagConstraints);

    jCheckBox2.setText("Italic");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.weightx = 100.0;
    gridBagConstraints.weighty = 100.0;
    getContentPane().add(jCheckBox2, gridBagConstraints);

    jButton1.setText("jButton1");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 7;
    gridBagConstraints.fill = GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 100.0;
    gridBagConstraints.weighty = 100.0;
    getContentPane().add(jButton1, gridBagConstraints);

    buttonGroup1.add(jRadioButton1);
    jRadioButton1.setSelected(true);
    jRadioButton1.setText("pomodoro");
    jRadioButton1.addActionListener(this::jRadioButton1ActionPerformed);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 8;
    getContentPane().add(jRadioButton1, gridBagConstraints);

    buttonGroup1.add(jRadioButton2);
    jRadioButton2.setText("patate");
    jRadioButton2.addActionListener(this::jRadioButton2ActionPerformed);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 10;
    getContentPane().add(jRadioButton2, gridBagConstraints);

    jToggleButton1.setText("jToggleButton1");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.gridheight = 3;
    getContentPane().add(jToggleButton1, gridBagConstraints);

    jSlider1.setMajorTickSpacing(50);
    jSlider1.setMaximum(300);
    jSlider1.setMinimum(100);
    jSlider1.setOrientation(JSlider.VERTICAL);
    jSlider1.setPaintLabels(true);
    jSlider1.setPaintTicks(true);
    jSlider1.setValue(230);
    jSlider1.setInverted(true);
    jSlider1.addChangeListener(this::jSlider1StateChanged);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 8;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 13;
    gridBagConstraints.fill = GridBagConstraints.VERTICAL;
    getContentPane().add(jSlider1, gridBagConstraints);

    jSlider2.setMajorTickSpacing(50);
    jSlider2.setMaximum(300);
    jSlider2.setMinimum(100);
    jSlider2.setPaintLabels(true);
    jSlider2.setPaintTicks(true);
    jSlider2.setValue(230);
    jSlider2.setInverted(true);
    jSlider2.addChangeListener(this::jSlider2StateChanged);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 14;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    getContentPane().add(jSlider2, gridBagConstraints);

    jSlider3.setMajorTickSpacing(50);
    jSlider3.setMaximum(300);
    jSlider3.setMinimum(100);
    jSlider3.setPaintLabels(true);
    jSlider3.setPaintTicks(true);
    jSlider3.setValue(230);
    jSlider3.addChangeListener(this::jSlider3StateChanged);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 12;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    getContentPane().add(jSlider3, gridBagConstraints);

    jSlider4.setMajorTickSpacing(50);
    jSlider4.setMaximum(300);
    jSlider4.setMinimum(100);
    jSlider4.setOrientation(JSlider.VERTICAL);
    jSlider4.setPaintLabels(true);
    jSlider4.setPaintTicks(true);
    jSlider4.setValue(230);
    jSlider4.addChangeListener(this::jSlider4StateChanged);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 13;
    gridBagConstraints.fill = GridBagConstraints.VERTICAL;
    getContentPane().add(jSlider4, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void jCheckBox1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
    this.jCheckBox2.setSelected(this.jCheckBox1.isSelected());
  }//GEN-LAST:event_jCheckBox1ActionPerformed

  private void jComboBox2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
    this.jButton1.setText(this.jComboBox2.getSelectedItem().toString());
  }//GEN-LAST:event_jComboBox2ActionPerformed

  private void jRadioButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
    this.jButton1.setText(this.jRadioButton1.getText());
  }//GEN-LAST:event_jRadioButton1ActionPerformed

  private void jRadioButton2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
    this.jButton1.setText(this.jRadioButton2.getText());
  }//GEN-LAST:event_jRadioButton2ActionPerformed

  private void jSlider1StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
    this.jButton1.setText(this.jSlider1.getValueIsAdjusting() + " " + this.jSlider1.getValue());
  }//GEN-LAST:event_jSlider1StateChanged

  private void jSlider2StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
    this.jButton1.setText(this.jSlider2.getValueIsAdjusting() + " " + this.jSlider2.getValue());
  }//GEN-LAST:event_jSlider2StateChanged

  private void jSlider3StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSlider3StateChanged
    this.jButton1.setText(this.jSlider3.getValueIsAdjusting() + " " + this.jSlider3.getValue());
  }//GEN-LAST:event_jSlider3StateChanged

  private void jSlider4StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSlider4StateChanged
    this.jButton1.setText(this.jSlider4.getValueIsAdjusting() + " " + this.jSlider4.getValue());
  }//GEN-LAST:event_jSlider4StateChanged

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private ButtonGroup buttonGroup1;
  private JButton jButton1;
  private JCheckBox jCheckBox1;
  private JCheckBox jCheckBox2;
  private JComboBox<String> jComboBox1;
  private JComboBox<Integer> jComboBox2;
  private JLabel jLabel1;
  private JLabel jLabel2;
  private JRadioButton jRadioButton1;
  private JRadioButton jRadioButton2;
  private JSlider jSlider1;
  private JSlider jSlider2;
  private JSlider jSlider3;
  private JSlider jSlider4;
  private JToggleButton jToggleButton1;
  // End of variables declaration//GEN-END:variables
}
