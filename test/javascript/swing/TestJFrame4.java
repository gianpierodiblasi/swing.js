package javascript.swing;

import java.awt.Color;
import java.awt.GridLayout;
import javascript.SwingJS;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;

/**
 *
 * @author gianpiero.diblasi
 */
@SuppressWarnings("serial")
public class TestJFrame4 extends javax.swing.JFrame {

  /**
   * Creates new form TestFrame3
   */
  public TestJFrame4() {
    super();
    this.initComponents();
    this.postInitComponents();
  }
  
  @SuppressWarnings("unchecked")
  private void postInitComponents() {
    ((JSTabbedPane) SwingJS.convert(this.jTabbedPane2)).setAlign(JSTabbedPane.CENTER);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jTabbedPane1 = new JTabbedPane();
    jPanel1 = new JPanel();
    jPanel2 = new JPanel();
    jTabbedPane2 = new JTabbedPane();
    jPanel3 = new JPanel();
    jPanel4 = new JPanel();

    getContentPane().setLayout(new GridLayout(2, 1));

    jPanel1.setBackground(new Color(255, 255, 0));
    jTabbedPane1.addTab("tab1", jPanel1);

    jPanel2.setBackground(new Color(255, 51, 51));
    jTabbedPane1.addTab("tab2", jPanel2);

    getContentPane().add(jTabbedPane1);

    jTabbedPane2.setTabPlacement(JTabbedPane.BOTTOM);

    jPanel3.setBackground(new Color(0, 255, 0));
    jTabbedPane2.addTab("tab1", jPanel3);

    jPanel4.setBackground(new Color(0, 0, 204));
    jTabbedPane2.addTab("tab2", jPanel4);

    getContentPane().add(jTabbedPane2);
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JPanel jPanel1;
  private JPanel jPanel2;
  private JPanel jPanel3;
  private JPanel jPanel4;
  private JTabbedPane jTabbedPane1;
  private JTabbedPane jTabbedPane2;
  // End of variables declaration//GEN-END:variables
}
