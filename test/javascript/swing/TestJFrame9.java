package javascript.swing;

import static def.dom.Globals.console;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import javascript.SwingJS;
import javascript.swing.colorchooser.JSColorHSVPanel;
import javascript.swing.colorchooser.JSColorSwatchesPanel;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author gianpiero.diblasi
 */
@SuppressWarnings("serial")
public class TestJFrame9 extends javax.swing.JFrame {

  /**
   * Creates new form TestFrame3
   */
  public TestJFrame9() {
    super();
    this.initComponents();
    this.postInitComponents();
  }
  
  private void postInitComponents() {
    JSColorSwatchesPanel swatchesPanel = new JSColorSwatchesPanel();
    swatchesPanel.addActionListener(event -> console.log(swatchesPanel.getSelectedColor().getRGB_HEX()));
    ((JSPanel) SwingJS.convert(this.jPanel2)).add(swatchesPanel, null);
    
    JSColorHSVPanel hsvPanel = new JSColorHSVPanel();
    hsvPanel.addChangeListener(event -> console.log(hsvPanel.getSelectedColor().getRGB_HEX()));
    swatchesPanel.addActionListener(event -> hsvPanel.setSelectedColor(swatchesPanel.getSelectedColor()));
    ((JSPanel) SwingJS.convert(this.jPanel2)).add(hsvPanel, null);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new JPanel();
    jButton4 = new JButton();
    jButton5 = new JButton();
    jPanel2 = new JPanel();

    setTitle("Test Color Chooser");

    jButton4.setText("Choose Color");
    jButton4.addActionListener(this::jButton4ActionPerformed);
    jPanel1.add(jButton4);

    jButton5.setText("Choose Color With Default");
    jButton5.addActionListener(this::jButton5ActionPerformed);
    jPanel1.add(jButton5);

    getContentPane().add(jPanel1, BorderLayout.PAGE_START);
    getContentPane().add(jPanel2, BorderLayout.CENTER);
  }// </editor-fold>//GEN-END:initComponents

  private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
//    this.choose(null);
  }//GEN-LAST:event_jButton4ActionPerformed

  private void jButton5ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
//    this.choose(new Color(255, 0, 0,255));
  }//GEN-LAST:event_jButton5ActionPerformed

//  private void open(int selectionType) {
//    JSFileChooser.showOpenDialog(".gif,.png,.jpeg,.jpg", selectionType, 0, files -> {
//      document.querySelectorAll("img").forEach(img -> img.parentElement.removeChild(img));
//
//      files.forEach(file -> {
//        FileReader fileReader = new FileReader();
//        fileReader.onload = event -> {
//          $Image img = ($Image) document.createElement("img");
//          img.src = (String) fileReader.result;
//
//          document.querySelector(".center").appendChild(img);
//          return null;
//        };
//        fileReader.readAsDataURL(file);
//      });
//    });
//  }
//  private void choose(Color color) {
//    JSColorChooser.showDialog(color, c -> {
//      document.querySelectorAll("img").forEach(img -> img.parentElement.removeChild(img));
//      $Image img = ($Image) document.createElement("img");
//      img.width = 100;
//      img.height = 100;
//      img.style.background = c.getRGB_HEX();
//      document.querySelector(".center").appendChild(img);
//    });
//  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JButton jButton4;
  private JButton jButton5;
  private JPanel jPanel1;
  private JPanel jPanel2;
  // End of variables declaration//GEN-END:variables
}
